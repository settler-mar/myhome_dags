#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
REPO_URL=$(git config --get remote.origin.url)
if [ -z "$REPO_URL" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º!"
    exit 1
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TMP_DIR=$(mktemp -d)
CURRENT_DIR=$(pwd)
LOG_DIR="$CURRENT_DIR/logs"
mkdir -p "$LOG_DIR"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ –ª–æ–≥–∞
LOG_FILE="$LOG_DIR/deploy_$(date '+%Y-%m-%d_%H-%M-%S').log"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞–ø–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() { rm -rf "$TMP_DIR"; }
trap cleanup EXIT

echo "üîÑ –ù–∞—á–∞–ª–æ –¥–µ–ø–ª–æ—è $(date)" | tee -a "$LOG_FILE"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä..." | tee -a "$LOG_FILE"
sudo docker stop app_server >>"$LOG_FILE" 2>&1 || echo "‚ö† –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω" | tee -a "$LOG_FILE"

# –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é
echo "üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..." | tee -a "$LOG_FILE"
git clone --depth 1 "$REPO_URL" "$TMP_DIR" >>"$LOG_FILE" 2>&1
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!" | tee -a "$LOG_FILE"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é git ls-files
IGNORED_FILES=$(git ls-files --others --ignored --exclude-standard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –≤ –ª–æ–≥
log_file_change() {
    local file="$1"
    local action="$2"
    local size_before="$3"
    local size_after="$4"

    echo "$action: $file | –†–∞–∑–º–µ—Ä –¥–æ: $size_before, –†–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ: $size_after" >>"$LOG_FILE"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å rsync, –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..." | tee -a "$LOG_FILE"
rsync -a --dry-run --info=progress2 --exclude=".git" --exclude-from=<(echo "$IGNORED_FILES") "$TMP_DIR/" "$CURRENT_DIR/" | while read -r line; do
    if [[ "$line" =~ ^[[:space:]]*([^ ]+)[[:space:]]+([A-Za-z]+)[[:space:]]+([0-9]+)[[:space:]]+([0-9]+) ]]; then
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞, –¥–µ–π—Å—Ç–≤–∏–µ –∏ —Ä–∞–∑–º–µ—Ä—ã –¥–æ/–ø–æ—Å–ª–µ
        file="${BASH_REMATCH[1]}"
        action="${BASH_REMATCH[2]}"
        size_before="${BASH_REMATCH[3]}"
        size_after="${BASH_REMATCH[4]}"

        # –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        log_file_change "$file" "$action" "$size_before" "$size_after"
    fi
done

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –±–µ–∑ dry-run, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
echo "‚úÖ –§–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!" | tee -a "$LOG_FILE"
rsync -a --exclude=".git" --exclude-from=<(echo "$IGNORED_FILES") "$TMP_DIR/" "$CURRENT_DIR/"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ –∏ –µ–≥–æ —Å–±–æ—Ä–∫–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ..." | tee -a "$LOG_FILE"
BUILD_FRONTEND=false
cd "$CURRENT_DIR/frontend" || exit 1
TRACKED_FILES=$(git ls-files frontend)
for FILE in $TRACKED_FILES; do
    if ! diff -q "$CURRENT_DIR/$FILE" "$TMP_DIR/$FILE" >/dev/null 2>&1; then
        BUILD_FRONTEND=true
        echo "‚ö† –ò–∑–º–µ–Ω–µ–Ω —Ñ–∞–π–ª: $FILE" >>"$LOG_FILE"
    fi
done
cd "$CURRENT_DIR"

if [ "$BUILD_FRONTEND" = true ]; then
    echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã. –§—Ä–æ–Ω—Ç–µ–Ω–¥ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω." | tee -a "$LOG_FILE"
else
    echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç. –ë–∏–ª–¥ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è." | tee -a "$LOG_FILE"
fi

# –ë–∏–ª–¥ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞, –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
if [ "$BUILD_FRONTEND" = true ]; then
    echo "‚öô –ó–∞–ø—É—Å–∫–∞–µ–º –±–∏–ª–¥ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..." | tee -a "$LOG_FILE"
    cd "$CURRENT_DIR/frontend" || exit 1
    make build_frontend >>"$LOG_FILE" 2>&1
    cd "$CURRENT_DIR"
fi

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä..." | tee -a "$LOG_FILE"
make run_prod >>"$LOG_FILE" 2>&1

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω! $(date)" | tee -a "$LOG_FILE"
